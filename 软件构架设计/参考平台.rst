.. Kenneth Lee 版权所有 2019-2020

:Authors: Kenneth Lee
:Version: 1.0

参考平台
*********

这几天在一个标准组织开会，会场上想法多，有些问题就先写下来，用来分享给其他参会
者，不一定会很严谨，先建一下逻辑而已。

现在很多标准组织都喜欢建“参考平台”，核心原因是现在标准已经越来越难写了。所以，
几十年前你会看到POSIX这样的非常详细的标准，现在就只能看见SBSA这样的简单“建议”。
现在跑通一个东西太容易了，性能才是关键问题，但性能是没法靠标准来规定的。你定了
标准也没法执行，性能上不去，Who Care？

问题是，参考平台在标准组织中其实很难运作。你要不要做得实用？不实用，没人用，这
东西有什么“参考”价值？你做得实用，你就成为其他实用系统的竞争对手了，谁会参与这
个开发？

战略这种东西，没有“中间地带”的。你定义一个角色，就要把这个角色做到极致，没有“都
可以”这一说。商业公司有商业公司的极致，标准组织有标准组织的极致。而这些极致正是
他们的短板。比如商业公司提供的平台，无法取信于生态——我写一个软件，为什么要绑定
在一家公司上面？同样，标准组织提供的平台，无法获得支持——如果你是和我竞争的，我
为什么要加入你？

所以，参考平台唯一的生路，是在没有商业应用的时候做到最优，有商业应用的时候，放
弃，然后仅做标准，或者，再扩展一点，它可以做一个CI系统，把商业应用集成进程，做
标准验证。这才是它的驱动力，否则都是运作不久的——你见过一个标准组织的“参考平台”
能发展得起来的吗？

CI系统本身可以有很多目的，我能想到的是这样一些：

验证关键特性在不断演进的新软件和硬件上得到保证验证同一个软件栈在不同的硬件上可
以互联互通验证软件的不同部件在不同的软件上可以互联互通

要做到这个，就需要有一个（组）核心的人可以持续在这个上面进行运作（简单说，需要
一个架构师），无论这个人来自标准组织本身，还是来自其中一个成员。

另一个难以处理的问题是，所谓是否有商业软件在生态中，这背后是个很微妙的事情：部
分成员可能没有做这个商业软件，但他可能有做这个商业软件的意图，他们会在这个合作
中尽力吗？这个其实考验运作团队的智慧，因为如果大家都承认“现在没有商业软件”，你
就已经占据话语权的中心了，这个优势本身可以帮助你压掉那种小动作，直到你自己决定
做商业软件，并把参考平台转化为CI系统。

说来说去，每个“民主系统”，都需要一个“强力大脑”去帮助把力量整合起来才行。
